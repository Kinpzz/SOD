name: "VGG16_SALIENCY_MAP"

input: "data"
input_dim: 5
input_dim: 3
input_dim: 256
input_dim: 256

input: "label"
input_dim: 5
input_dim: 1
input_dim: 256
input_dim: 256

input: "binary_labels"
input_dim: 5
input_dim: 100
input_dim: 1
input_dim: 1

## shrink data ###
layer {
  bottom: "data"
  top: "shrink_data05"
  name: "shrink_data06"
  type: "Interp"
  interp_param {
    shrink_factor: 2
    pad_beg: 0
    pad_end: 0
  }
}

layer {
  bottom: "data"
  top: "shrink_data075"
  name: "shrink_data075"
  type: "Interp"
  interp_param {
    shrink_factor: 4
    zoom_factor: 3
    pad_beg: 0
    pad_end: 0
  }
}

### NETWORK for resolution 1 ###

layer {
  bottom: "data"
  top: "conv1_1"
  name: "conv1_1"
  type: "Convolution"
  param {
    name: "conv1_1_w"
    lr_mult: 1
    decay_mult: 1
  }
  param {
    name: "conv1_1_b"
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
  }
}
# layer {
#   name: "conv1_1_bn"
#   type: "BatchNorm"
#   bottom: "conv1_1"
#   top: "conv1_1"
# }
layer {
  bottom: "conv1_1"
  top: "conv1_1"
  name: "relu1_1"
  type: "ReLU"
}
layer {
  bottom: "conv1_1"
  top: "conv1_2"
  name: "conv1_2"
  type: "Convolution"
  param {
    name: "conv1_2_w"
    lr_mult: 1
    decay_mult: 1
  }
  param {
    name: "conv1_2_b"
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
  }
}
# layer {
#   name: "conv1_2_bn"
#   type: "BatchNorm"
#   bottom: "conv1_2"
#   top: "conv1_2"
# }
layer {
  bottom: "conv1_2"
  top: "conv1_2"
  name: "relu1_2"
  type: "ReLU"
}
layer {
  bottom: "conv1_2"
  top: "pool1"
  name: "pool1"
  type: "Pooling"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
    # pad: 1
  }
}
layer {
  bottom: "pool1"
  top: "conv2_1"
  name: "conv2_1"
  type: "Convolution"
  param {
    name: "conv2_1_w"
    lr_mult: 1
    decay_mult: 1
  }
  param {
    name: "conv2_1_b"
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
  }
}
# layer {
#   name: "conv2_1_bn"
#   type: "BatchNorm"
#   bottom: "conv2_1"
#   top: "conv2_1"
# }
layer {
  bottom: "conv2_1"
  top: "conv2_1"
  name: "relu2_1"
  type: "ReLU"
}
layer {
  bottom: "conv2_1"
  top: "conv2_2"
  name: "conv2_2"
  type: "Convolution"
  param {
    name: "conv2_2_w"
    lr_mult: 1
    decay_mult: 1
  }
  param {
    name: "conv2_2_b"
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
  }
}
# layer {
#   name: "conv2_2_bn"
#   type: "BatchNorm"
#   bottom: "conv2_2"
#   top: "conv2_2"
# }
layer {
  bottom: "conv2_2"
  top: "conv2_2"
  name: "relu2_2"
  type: "ReLU"
}
layer {
  bottom: "conv2_2"
  top: "pool2"
  name: "pool2"
  type: "Pooling"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
    # pad: 1
  }
}
layer {
  bottom: "pool2"
  top: "conv3_1"
  name: "conv3_1"
  type: "Convolution"
  param {
    name: "conv3_1_w"
    lr_mult: 1
    decay_mult: 1
  }
  param {
    name: "conv3_1_b"
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
  }
}
# layer {
#   name: "conv3_1_bn"
#   type: "BatchNorm"
#   bottom: "conv3_1"
#   top: "conv3_1"
# }
layer {
  bottom: "conv3_1"
  top: "conv3_1"
  name: "relu3_1"
  type: "ReLU"
}
layer {
  bottom: "conv3_1"
  top: "conv3_2"
  name: "conv3_2"
  type: "Convolution"
  param {
    name: "conv3_2_w"
    lr_mult: 1
    decay_mult: 1
  }
  param {
    name: "conv3_2_b"
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
  }
}
# layer {
#   name: "conv3_2_bn"
#   type: "BatchNorm"
#   bottom: "conv3_2"
#   top: "conv3_2"
# }
layer {
  bottom: "conv3_2"
  top: "conv3_2"
  name: "relu3_2"
  type: "ReLU"
}
layer {
  bottom: "conv3_2"
  top: "conv3_3"
  name: "conv3_3"
  type: "Convolution"
  param {
    name: "conv3_3_w"
    lr_mult: 1
    decay_mult: 1
  }
  param {
    name: "conv3_3_b"
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
  }
}
# layer {
#   name: "conv3_3_bn"
#   type: "BatchNorm"
#   bottom: "conv3_3"
#   top: "conv3_3"
# }
layer {
  bottom: "conv3_3"
  top: "conv3_3"
  name: "relu3_3"
  type: "ReLU"
}
layer {
  bottom: "conv3_3"
  top: "pool3"
  name: "pool3"
  type: "Pooling"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
    # pad: 1
  }
}
layer {
  bottom: "pool3"
  top: "conv4_1"
  name: "conv4_1"
  type: "Convolution"
  param {
    name: "conv4_1_w"
    lr_mult: 1
    decay_mult: 1
  }
  param {
    name: "conv4_1_b"
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
# layer {
#   name: "conv4_1_bn"
#   type: "BatchNorm"
#   bottom: "conv4_1"
#   top: "conv4_1"
# }
layer {
  bottom: "conv4_1"
  top: "conv4_1"
  name: "relu4_1"
  type: "ReLU"
}
layer {
  bottom: "conv4_1"
  top: "conv4_2"
  name: "conv4_2"
  type: "Convolution"
  param {
    name: "conv4_2_w"
    lr_mult: 1
    decay_mult: 1
  }
  param {
    name: "conv4_2_b"
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
# layer {
#   name: "conv4_2_bn"
#   type: "BatchNorm"
#   bottom: "conv4_2"
#   top: "conv4_2"
# }
layer {
  bottom: "conv4_2"
  top: "conv4_2"
  name: "relu4_2"
  type: "ReLU"
}
layer {
  bottom: "conv4_2"
  top: "conv4_3"
  name: "conv4_3"
  type: "Convolution"
  param {
    name: "conv4_3_w"
    lr_mult: 1
    decay_mult: 1
  }
  param {
    name: "conv4_3_b"
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
# layer {
#   name: "conv4_3_bn"
#   type: "BatchNorm"
#   bottom: "conv4_3"
#   top: "conv4_3"
# }
layer {
  bottom: "conv4_3"
  top: "conv4_3"
  name: "relu4_3"
  type: "ReLU"
}
layer {
  bottom: "conv4_3"
  top: "pool4"
  name: "pool4"
  type: "Pooling"
  pooling_param {
    pool: MAX
    kernel_size: 3
    pad: 1
    stride: 1
  }
}
layer {
  bottom: "pool4"
  top: "conv5_1"
  name: "conv5_1"
  type: "Convolution"
  param {
    name: "conv5_1_w"
    lr_mult: 1
    decay_mult: 1
  }
  param {
    name: "conv5_1_b"
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    #pad: 1
    pad: 2
    dilation: 2
    kernel_size: 3
  }
}
# layer {
#   name: "conv5_1_bn"
#   type: "BatchNorm"
#   bottom: "conv5_1"
#   top: "conv5_1"
# }
layer {
  bottom: "conv5_1"
  top: "conv5_1"
  name: "relu5_1"
  type: "ReLU"
}
layer {
  bottom: "conv5_1"
  top: "conv5_2"
  name: "conv5_2"
  type: "Convolution"
  param {
    name: "conv5_2_w"
    lr_mult: 1
    decay_mult: 1
  }
  param {
    name: "conv5_2_b"
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    #pad: 1
    pad: 2
    dilation: 2
    kernel_size: 3
  }
}
# layer {
#   name: "conv5_2_bn"
#   type: "BatchNorm"
#   bottom: "conv5_2"
#   top: "conv5_2"
# }
layer {
  bottom: "conv5_2"
  top: "conv5_2"
  name: "relu5_2"
  type: "ReLU"
}
layer {
  bottom: "conv5_2"
  top: "conv5_3"
  name: "conv5_3"
  type: "Convolution"
  param {
    name: "conv5_3_w"
    lr_mult: 1
    decay_mult: 1
  }
  param {
    name: "conv5_3_b"
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    #pad: 1
    pad: 2
    dilation: 2
    kernel_size: 3
  }
}
# layer {
#   name: "conv5_3_bn"
#   type: "BatchNorm"
#   bottom: "conv5_3"
#   top: "conv5_3"
# }
layer {
  bottom: "conv5_3"
  top: "conv5_3"
  name: "relu5_3"
  type: "ReLU"
}
layer {
  bottom: "conv5_3"
  top: "pool5"
  name: "pool5"
  type: "Pooling"
  pooling_param {
    pool: MAX
    #kernel_size: 2
    #stride: 2
    kernel_size: 3
    stride: 1
    pad: 1
  }
}

### NETWORK for resolution 1/2 ###

layer {
  bottom: "shrink_data05"
  top: "conv1_1_res05"
  name: "conv1_1_res05"
  type: "Convolution"
  param {
    name: "conv1_1_w"
    lr_mult: 1
    decay_mult: 1
  }
  param {
    name: "conv1_1_b"
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
  }
}
layer {
  bottom: "conv1_1_res05"
  top: "conv1_1_res05"
  name: "relu1_1_res05"
  type: "ReLU"
}
layer {
  bottom: "conv1_1_res05"
  top: "conv1_2_res05"
  name: "conv1_2_res05"
  type: "Convolution"
  param {
    name: "conv1_2_w"
    lr_mult: 1
    decay_mult: 1
  }
  param {
    name: "conv1_2_b"
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
  }
}
layer {
  bottom: "conv1_2_res05"
  top: "conv1_2_res05"
  name: "relu1_2_res05"
  type: "ReLU"
}
layer {
  bottom: "conv1_2_res05"
  top: "pool1_res05"
  name: "pool1_res05"
  type: "Pooling"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
    # pad: 1
  }
}
layer {
  bottom: "pool1_res05"
  top: "conv2_1_res05"
  name: "conv2_1_res05"
  type: "Convolution"
  param {
    name: "conv2_1_w"
    lr_mult: 1
    decay_mult: 1
  }
  param {
    name: "conv2_1_b"
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
  }
}
layer {
  bottom: "conv2_1_res05"
  top: "conv2_1_res05"
  name: "relu2_1_res05"
  type: "ReLU"
}
layer {
  bottom: "conv2_1_res05"
  top: "conv2_2_res05"
  name: "conv2_2_res05"
  type: "Convolution"
  param {
    name: "conv2_2_w"
    lr_mult: 1
    decay_mult: 1
  }
  param {
    name: "conv2_2_b"
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
  }
}
layer {
  bottom: "conv2_2_res05"
  top: "conv2_2_res05"
  name: "relu2_2_res05"
  type: "ReLU"
}
layer {
  bottom: "conv2_2_res05"
  top: "pool2_res05"
  name: "pool2_res05"
  type: "Pooling"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
    # pad: 1
  }
}
layer {
  bottom: "pool2_res05"
  top: "conv3_1_res05"
  name: "conv3_1_res05"
  type: "Convolution"
  param {
    name: "conv3_1_w"
    lr_mult: 1
    decay_mult: 1
  }
  param {
    name: "conv3_1_b"
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
  }
}
layer {
  bottom: "conv3_1_res05"
  top: "conv3_1_res05"
  name: "relu3_1_res05"
  type: "ReLU"
}
layer {
  bottom: "conv3_1_res05"
  top: "conv3_2_res05"
  name: "conv3_2_res05"
  type: "Convolution"
  param {
    name: "conv3_2_w"
    lr_mult: 1
    decay_mult: 1
  }
  param {
    name: "conv3_2_b"
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
  }
}
layer {
  bottom: "conv3_2_res05"
  top: "conv3_2_res05"
  name: "relu3_2_res05"
  type: "ReLU"
}
layer {
  bottom: "conv3_2_res05"
  top: "conv3_3_res05"
  name: "conv3_3_res05"
  type: "Convolution"
  param {
    name: "conv3_3_w"
    lr_mult: 1
    decay_mult: 1
  }
  param {
    name: "conv3_3_b"
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
  }
}
layer {
  bottom: "conv3_3_res05"
  top: "conv3_3_res05"
  name: "relu3_3_res05"
  type: "ReLU"
}
layer {
  bottom: "conv3_3_res05"
  top: "pool3_res05"
  name: "pool3_res05"
  type: "Pooling"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
    # pad: 1
  }
}
layer {
  bottom: "pool3_res05"
  top: "conv4_1_res05"
  name: "conv4_1_res05"
  type: "Convolution"
  param {
    name: "conv4_1_w"
    lr_mult: 1
    decay_mult: 1
  }
  param {
    name: "conv4_1_b"
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  bottom: "conv4_1_res05"
  top: "conv4_1_res05"
  name: "relu4_1_res05"
  type: "ReLU"
}
layer {
  bottom: "conv4_1_res05"
  top: "conv4_2_res05"
  name: "conv4_2_res05"
  type: "Convolution"
  param {
    name: "conv4_2_w"
    lr_mult: 1
    decay_mult: 1
  }
  param {
    name: "conv4_2_b"
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  bottom: "conv4_2_res05"
  top: "conv4_2_res05"
  name: "relu4_2_res05"
  type: "ReLU"
}
layer {
  bottom: "conv4_2_res05"
  top: "conv4_3_res05"
  name: "conv4_3_res05"
  type: "Convolution"
  param {
    name: "conv4_3_w"
    lr_mult: 1
    decay_mult: 1
  }
  param {
    name: "conv4_3_b"
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  bottom: "conv4_3_res05"
  top: "conv4_3_res05"
  name: "relu4_3_res05"
  type: "ReLU"
}
layer {
  bottom: "conv4_3_res05"
  top: "pool4_res05"
  name: "pool4_res05"
  type: "Pooling"
  pooling_param {
    pool: MAX
    kernel_size: 3
    pad: 1
    stride: 1
  }
}
layer {
  bottom: "pool4_res05"
  top: "conv5_1_res05"
  name: "conv5_1_res05"
  type: "Convolution"
  param {
    name: "conv5_1_w"
    lr_mult: 1
    decay_mult: 1
  }
  param {
    name: "conv5_1_b"
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    #pad: 1
    pad: 2
    dilation: 2
    kernel_size: 3
  }
}
layer {
  bottom: "conv5_1_res05"
  top: "conv5_1_res05"
  name: "relu5_1_res05"
  type: "ReLU"
}
layer {
  bottom: "conv5_1_res05"
  top: "conv5_2_res05"
  name: "conv5_2_res05"
  type: "Convolution"
  param {
    name: "conv5_2_w"
    lr_mult: 1
    decay_mult: 1
  }
  param {
    name: "conv5_2_b"
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    #pad: 1
    pad: 2
    dilation: 2
    kernel_size: 3
  }
}
layer {
  bottom: "conv5_2_res05"
  top: "conv5_2_res05"
  name: "relu5_2_res05"
  type: "ReLU"
}
layer {
  bottom: "conv5_2_res05"
  top: "conv5_3_res05"
  name: "conv5_3_res05"
  type: "Convolution"
  param {
    name: "conv5_3_w"
    lr_mult: 1
    decay_mult: 1
  }
  param {
    name: "conv5_3_b"
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    #pad: 1
    pad: 2
    dilation: 2
    kernel_size: 3
  }
}
layer {
  bottom: "conv5_3_res05"
  top: "conv5_3_res05"
  name: "relu5_3_res05"
  type: "ReLU"
}
layer {
  bottom: "conv5_3_res05"
  top: "pool5_res05"
  name: "pool5_res05"
  type: "Pooling"
  pooling_param {
    pool: MAX
    #kernel_size: 2
    #stride: 2
    kernel_size: 3
    stride: 1
    pad: 1
  }
}

## NETWORK for resolution 3/4 ###

layer {
  bottom: "shrink_data075"
  top: "conv1_1_res075"
  name: "conv1_1_res075"
  type: "Convolution"
  param {
    name: "conv1_1_w"
    lr_mult: 1
    decay_mult: 1
  }
  param {
    name: "conv1_1_b"
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
  }
}
layer {
  bottom: "conv1_1_res075"
  top: "conv1_1_res075"
  name: "relu1_1_res075"
  type: "ReLU"
}
layer {
  bottom: "conv1_1_res075"
  top: "conv1_2_res075"
  name: "conv1_2_res075"
  type: "Convolution"
  param {
    name: "conv1_2_w"
    lr_mult: 1
    decay_mult: 1
  }
  param {
    name: "conv1_2_b"
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
  }
}
layer {
  bottom: "conv1_2_res075"
  top: "conv1_2_res075"
  name: "relu1_2_res075"
  type: "ReLU"
}
layer {
  bottom: "conv1_2_res075"
  top: "pool1_res075"
  name: "pool1_res075"
  type: "Pooling"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
    # pad: 1
  }
}
layer {
  bottom: "pool1_res075"
  top: "conv2_1_res075"
  name: "conv2_1_res075"
  type: "Convolution"
  param {
    name: "conv2_1_w"
    lr_mult: 1
    decay_mult: 1
  }
  param {
    name: "conv2_1_b"
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
  }
}
layer {
  bottom: "conv2_1_res075"
  top: "conv2_1_res075"
  name: "relu2_1_res075"
  type: "ReLU"
}
layer {
  bottom: "conv2_1_res075"
  top: "conv2_2_res075"
  name: "conv2_2_res075"
  type: "Convolution"
  param {
    name: "conv2_2_w"
    lr_mult: 1
    decay_mult: 1
  }
  param {
    name: "conv2_2_b"
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
  }
}
layer {
  bottom: "conv2_2_res075"
  top: "conv2_2_res075"
  name: "relu2_2_res075"
  type: "ReLU"
}
layer {
  bottom: "conv2_2_res075"
  top: "pool2_res075"
  name: "pool2_res075"
  type: "Pooling"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
    # pad: 1
  }
}
layer {
  bottom: "pool2_res075"
  top: "conv3_1_res075"
  name: "conv3_1_res075"
  type: "Convolution"
  param {
    name: "conv3_1_w"
    lr_mult: 1
    decay_mult: 1
  }
  param {
    name: "conv3_1_b"
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
  }
}
layer {
  bottom: "conv3_1_res075"
  top: "conv3_1_res075"
  name: "relu3_1_res075"
  type: "ReLU"
}
layer {
  bottom: "conv3_1_res075"
  top: "conv3_2_res075"
  name: "conv3_2_res075"
  type: "Convolution"
  param {
    name: "conv3_2_w"
    lr_mult: 1
    decay_mult: 1
  }
  param {
    name: "conv3_2_b"
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
  }
}
layer {
  bottom: "conv3_2_res075"
  top: "conv3_2_res075"
  name: "relu3_2_res075"
  type: "ReLU"
}
layer {
  bottom: "conv3_2_res075"
  top: "conv3_3_res075"
  name: "conv3_3_res075"
  type: "Convolution"
  param {
    name: "conv3_3_w"
    lr_mult: 1
    decay_mult: 1
  }
  param {
    name: "conv3_3_b"
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
  }
}
layer {
  bottom: "conv3_3_res075"
  top: "conv3_3_res075"
  name: "relu3_3_res075"
  type: "ReLU"
}
layer {
  bottom: "conv3_3_res075"
  top: "pool3_res075"
  name: "pool3_res075"
  type: "Pooling"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
    # pad: 1
  }
}
layer {
  bottom: "pool3_res075"
  top: "conv4_1_res075"
  name: "conv4_1_res075"
  type: "Convolution"
  param {
    name: "conv4_1_w"
    lr_mult: 1
    decay_mult: 1
  }
  param {
    name: "conv4_1_b"
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  bottom: "conv4_1_res075"
  top: "conv4_1_res075"
  name: "relu4_1_res075"
  type: "ReLU"
}
layer {
  bottom: "conv4_1_res075"
  top: "conv4_2_res075"
  name: "conv4_2_res075"
  type: "Convolution"
  param {
    name: "conv4_2_w"
    lr_mult: 1
    decay_mult: 1
  }
  param {
    name: "conv4_2_b"
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  bottom: "conv4_2_res075"
  top: "conv4_2_res075"
  name: "relu4_2_res075"
  type: "ReLU"
}
layer {
  bottom: "conv4_2_res075"
  top: "conv4_3_res075"
  name: "conv4_3_res075"
  type: "Convolution"
  param {
    name: "conv4_3_w"
    lr_mult: 1
    decay_mult: 1
  }
  param {
    name: "conv4_3_b"
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  bottom: "conv4_3_res075"
  top: "conv4_3_res075"
  name: "relu4_3_res075"
  type: "ReLU"
}
layer {
  bottom: "conv4_3_res075"
  top: "pool4_res075"
  name: "pool4_res075"
  type: "Pooling"
  pooling_param {
    pool: MAX
    kernel_size: 3
    pad: 1
    stride: 1
  }
}
layer {
  bottom: "pool4_res075"
  top: "conv5_1_res075"
  name: "conv5_1_res075"
  type: "Convolution"
  param {
    name: "conv5_1_w"
    lr_mult: 1
    decay_mult: 1
  }
  param {
    name: "conv5_1_b"
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    #pad: 1
    pad: 2
    dilation: 2
    kernel_size: 3
  }
}
layer {
  bottom: "conv5_1_res075"
  top: "conv5_1_res075"
  name: "relu5_1_res075"
  type: "ReLU"
}
layer {
  bottom: "conv5_1_res075"
  top: "conv5_2_res075"
  name: "conv5_2_res075"
  type: "Convolution"
  param {
    name: "conv5_2_w"
    lr_mult: 1
    decay_mult: 1
  }
  param {
    name: "conv5_2_b"
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    #pad: 1
    pad: 2
    dilation: 2
    kernel_size: 3
  }
}
layer {
  bottom: "conv5_2_res075"
  top: "conv5_2_res075"
  name: "relu5_2_res075"
  type: "ReLU"
}
layer {
  bottom: "conv5_2_res075"
  top: "conv5_3_res075"
  name: "conv5_3_res075"
  type: "Convolution"
  param {
    name: "conv5_3_w"
    lr_mult: 1
    decay_mult: 1
  }
  param {
    name: "conv5_3_b"
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    #pad: 1
    pad: 2
    dilation: 2
    kernel_size: 3
  }
}
layer {
  bottom: "conv5_3_res075"
  top: "conv5_3_res075"
  name: "relu5_3_res075"
  type: "ReLU"
}
layer {
  bottom: "conv5_3_res075"
  top: "pool5_res075"
  name: "pool5_res075"
  type: "Pooling"
  pooling_param {
    pool: MAX
    #kernel_size: 2
    #stride: 2
    kernel_size: 3
    stride: 1
    pad: 1
  }
}

#############################
##         Top-Down        ##
#############################

## NETWORK for resolution 1 ###
## pool5 - > skip2
layer {
  name: "skip2"
  type: "Convolution"
  bottom: "pool5"
  top: "skip2"
  param {
    name: "skip2_w"
    lr_mult: 1
    decay_mult: 1
  }
  param {
    name: "skip2_b"
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64 
    pad: 1 
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }  
  }
}
layer { name: "skip2_relu" type: "ReLU" bottom: "skip2" top: "skip2" }

## pool4 -> skip3
layer {
  name: "skip3"
  type: "Convolution"
  bottom: "pool4"
  top: "skip3"
  param {
    name: "skip3_w"
    lr_mult: 1
    decay_mult: 1
  }
  param {
    name: "skip3_b"
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64 
    pad: 1 
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }  
  }
}
layer { name: "skip3_relu" type: "ReLU" bottom: "skip3" top: "skip3" }

## skip2 + skip3 -> concat3
layer { name: "concat3" bottom: "skip3" bottom: "skip2" top: "concat3" type: "Concat"
        concat_param { axis: 1 }}

## concat3 -> mask4
layer {
  name: "mask4"
  type: "Convolution"
  bottom: "concat3"
  top: "mask4"
  param {
    name: "mask4_w"
    lr_mult: 1
    decay_mult: 1
  }
  param {
    name: "mask4_b"
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64 
    pad: 1 
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }  
  }
}
layer { name: "mask4_relu" type: "ReLU" bottom: "mask4" top: "mask4" }

## pool3 -> skip4
layer {
  name: "skip4"
  type: "Convolution"
  bottom: "pool3"
  top: "skip4"
  
  param {
    name: "skip4_w"
    lr_mult: 1
    decay_mult: 1
  }
  param {
    name: "skip4_b"
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64 
    pad: 1 
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }  
  }
}
layer { name: "skip4_relu" type: "ReLU" bottom: "skip4" top: "skip4" }

## mask4 + skip4 -> mask5
layer { name: "concat4" bottom: "skip4" bottom: "mask4" top: "concat4"
        type: "Concat" concat_param { axis: 1 }}
layer {
  name: "mask5"
  type: "Convolution"
  bottom: "concat4"
  top: "mask5"
  param {
    name: "mask5_w"
    lr_mult: 1
    decay_mult: 1
  }
  param {
    name: "mask5_b"
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64 
    pad: 1 
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }  
  }
}
layer { name: "mask5_relu" type: "ReLU" bottom: "mask5" top: "mask5" }

# upsample: mask5 -> mask5_up
layer {
  name: "mask5_up"
  type: "Deconvolution"
  bottom: "mask5"
  top: "mask5_up"
  
  param {
    name: "mask5_up_w"
    lr_mult: 1
    decay_mult: 1
  }
  param {
    name: "mask5_up_b"
    lr_mult: 2
    decay_mult: 0
  }

  convolution_param {
    num_output: 64    
    kernel_size: 4    
    stride: 2          
    pad: 1
    weight_filler {
      type: "bilinear"
 
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer { name: "mask5_up_relu" type: "ReLU" bottom: "mask5_up" top: "mask5_up" }

## pool2 -> skip5
layer {
  name: "skip5"
  type: "Convolution"
  bottom: "pool2"
  top: "skip5"  
  param {
    name: "skip5_w"
    lr_mult: 1
    decay_mult: 1
  }
  param {
    name: "skip5_b"
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64 
    pad: 1 
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }  
  }
}
layer { name: "skip5_relu" type: "ReLU" bottom: "skip5" top: "skip5" }

## mask5_up + skip5 -> mask6
layer { name: "concat5" bottom: "skip5"  bottom: "mask5_up" top: "concat5"
  type: "Concat" concat_param {axis: 1}}
layer {
  name: "mask6"
  type: "Convolution"
  bottom: "concat5"
  top: "mask6"

  param {
    name: "mask6_w"
    lr_mult: 1
    decay_mult: 1
  }
  param {
    name: "mask6_b"
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64 
    pad: 1 
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }  
  }
}
layer { name: "mask6_relu" type: "ReLU" bottom: "mask6" top: "mask6" }

# upsample: mask6 -> mask6_up
layer {
  name: "mask6_up"
  type: "Deconvolution"
  bottom: "mask6"
  top: "mask6_up"
  param {
    name: "mask6_up_w"
    lr_mult: 1
    decay_mult: 1
  }
  param {
    name: "mask_up_b"
    lr_mult: 2
    decay_mult: 0
  }

  convolution_param {
    num_output: 64    
    kernel_size: 4    
    stride: 2          
    pad: 1
    weight_filler {
      type: "bilinear"
 
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer { name: "mask6_up_relu" type: "ReLU" bottom: "mask6_up" top: "mask6_up" }

## pool1 -> skip6
layer {
  name: "skip6"
  type: "Convolution"
  bottom: "pool1"
  top: "skip6"
  
  param {
    name: "skip6_w"
    lr_mult: 1
    decay_mult: 1
  }
  param {
    name: "skip6_b"
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64 
    pad: 1 
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }  
  }
}
layer { name: "skip6_relu" type: "ReLU" bottom: "skip6" top: "skip6" }

## mask6_up + skip6 -> mask7
layer { name: "concat6" bottom: "skip6" bottom: "mask6_up" top: "concat6"
        type: "Concat" concat_param {axis: 1}}
layer {
  name: "mask7"
  type: "Convolution"
  bottom: "concat6"
  top: "mask7"

  param {
    name: "mask7_w"
    lr_mult: 1
    decay_mult: 1
  }
  param {
    name: "mask7_b"
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64 
    pad: 1 
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }  
  }
}
layer { name: "mask7_relu" type: "ReLU" bottom: "mask7" top: "mask7" }

# upsample:mask7 -> mask7_up
layer {
  name: "mask7_up"
  type: "Deconvolution"
  bottom: "mask7"
  top: "mask7_up"

  param {
    name: "mask7_up_w"
    lr_mult: 1
    decay_mult: 1
  }
  param {
    name: "mask7_up_b"
    lr_mult: 2
    decay_mult: 0
  }

  convolution_param {
    num_output: 64    
    kernel_size: 4    
    stride: 2          
    pad: 1
    weight_filler {
      type: "bilinear"
 
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer { name: "mask7_up_relu" type: "ReLU" bottom: "mask7_up" top: "mask7_up" }

## NETWORK for resolution 1/2 ###
## pool5 - > skip2
layer {
  name: "skip2_res05"
  type: "Convolution"
  bottom: "pool5_res05"
  top: "skip2_res05"
  param {
    name: "skip2_w"
    lr_mult: 1
    decay_mult: 1
  }
  param {
    name: "skip2_b"
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64 
    pad: 1 
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }  
  }
}
layer { name: "skip2_res05_relu" type: "ReLU" bottom: "skip2_res05" top: "skip2_res05" }

## pool4 -> skip3
layer {
  name: "skip3_res05"
  type: "Convolution"
  bottom: "pool4_res05"
  top: "skip3_res05"
  param {
    name: "skip3_w"
    lr_mult: 1
    decay_mult: 1
  }
  param {
    name: "skip3_b"
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64 
    pad: 1 
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }  
  }
}
layer { name: "skip3_res05_relu" type: "ReLU" bottom: "skip3_res05" top: "skip3_res05" }

## skip2 + skip3 -> concat3
layer { name: "concat3_res05" bottom: "skip3_res05" bottom: "skip2_res05" top: "concat3_res05" type: "Concat"
        concat_param { axis: 1 }}

## concat3 -> mask4
layer {
  name: "mask4_res05"
  type: "Convolution"
  bottom: "concat3_res05"
  top: "mask4_res05"
  param {
    name: "mask4_w"
    lr_mult: 1
    decay_mult: 1
  }
  param {
    name: "mask4_b"
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64 
    pad: 1 
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }  
  }
}
layer { name: "mask4_res05_relu" type: "ReLU" bottom: "mask4_res05" top: "mask4_res05" }

## pool3 -> skip4
layer {
  name: "skip4_res05"
  type: "Convolution"
  bottom: "pool3_res05"
  top: "skip4_res05"
  
  param {
    name: "skip4_w"
    lr_mult: 1
    decay_mult: 1
  }
  param {
    name: "skip4_b"
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64 
    pad: 1 
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }  
  }
}
layer { name: "skip4_res05_relu" type: "ReLU" bottom: "skip4_res05" top: "skip4_res05" }

## mask4 + skip4 -> mask5
layer { name: "concat4_res05" bottom: "skip4_res05" bottom: "mask4_res05" top: "concat4_res05"
        type: "Concat" concat_param { axis: 1 }}
layer {
  name: "mask5_res05"
  type: "Convolution"
  bottom: "concat4_res05"
  top: "mask5_res05"
  param {
    name: "mask5_w"
    lr_mult: 1
    decay_mult: 1
  }
  param {
    name: "mask5_b"
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64 
    pad: 1 
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }  
  }
}
layer { name: "mask5_res05_relu" type: "ReLU" bottom: "mask5_res05" top: "mask5_res05" }

# upsample: mask5 -> mask5_up
layer {
  name: "mask5_up_res05"
  type: "Deconvolution"
  bottom: "mask5_res05"
  top: "mask5_up_res05"
  
  param {
    name: "mask5_up_w"
    lr_mult: 1
    decay_mult: 1
  }
  param {
    name: "mask5_up_b"
    lr_mult: 2
    decay_mult: 0
  }

  convolution_param {
    num_output: 64    
    kernel_size: 4    
    stride: 2          
    pad: 1
    weight_filler {
      type: "bilinear"
 
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer { name: "mask5_up_res05_relu" type: "ReLU" bottom: "mask5_up_res05" top: "mask5_up_res05" }

## pool2 -> skip5
layer {
  name: "skip5_res05"
  type: "Convolution"
  bottom: "pool2_res05"
  top: "skip5_res05"  
  param {
    name: "skip5_w"
    lr_mult: 1
    decay_mult: 1
  }
  param {
    name: "skip5_b"
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64 
    pad: 1 
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }  
  }
}
layer { name: "skip5_res05_relu" type: "ReLU" bottom: "skip5_res05" top: "skip5_res05" }

## mask5_up + skip5 -> mask6
layer { name: "concat5_res05" bottom: "skip5_res05"  bottom: "mask5_up_res05" top: "concat5_res05"
  type: "Concat" concat_param {axis: 1}}
layer {
  name: "mask6_res05"
  type: "Convolution"
  bottom: "concat5_res05"
  top: "mask6_res05"
  param {
    name: "mask6_w"
    lr_mult: 1
    decay_mult: 1
  }
  param {
    name: "mask6_b"
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64 
    pad: 1 
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }  
  }
}
layer { name: "mask6_res05_relu" type: "ReLU" bottom: "mask6_res05" top: "mask6_res05" }

# upsample: mask6 -> mask6_up
layer {
  name: "mask6_up_res05"
  type: "Deconvolution"
  bottom: "mask6_res05"
  top: "mask6_up_res05"
  param {
    name: "mask6_up_w"
    lr_mult: 1
    decay_mult: 1
  }
  param {
    name: "mask_up_b"
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64    
    kernel_size: 4    
    stride: 2          
    pad: 1
    weight_filler {
      type: "bilinear"
 
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer { name: "mask6_up_res05_relu" type: "ReLU" bottom: "mask6_up_res05" top: "mask6_up_res05" }

## pool1 -> skip6
layer {
  name: "skip6_res05"
  type: "Convolution"
  bottom: "pool1_res05"
  top: "skip6_res05"
  param {
    name: "skip6_w"
    lr_mult: 1
    decay_mult: 1
  }
  param {
    name: "skip6_b"
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64 
    pad: 1 
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }  
  }
}
layer { name: "skip6_res05_relu" type: "ReLU" bottom: "skip6_res05" top: "skip6_res05" }

## mask6_up + skip6 -> mask7
layer { name: "concat6_res05" bottom: "skip6_res05" bottom: "mask6_up_res05" top: "concat6_res05"
        type: "Concat" concat_param {axis: 1}}
layer {
  name: "mask7_res05"
  type: "Convolution"
  bottom: "concat6_res05"
  top: "mask7_res05"
  param {
    name: "mask7_w"
    lr_mult: 1
    decay_mult: 1
  }
  param {
    name: "mask7_b"
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64 
    pad: 1 
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }  
  }
}
layer { name: "mask7_res05_relu" type: "ReLU" bottom: "mask7_res05" top: "mask7_res05" }

# upsample:mask7 -> mask7_up
layer {
  name: "mask7_up_res05"
  type: "Deconvolution"
  bottom: "mask7_res05"
  top: "mask7_up_res05"
  param {
    name: "mask7_up_w"
    lr_mult: 1
    decay_mult: 1
  }
  param {
    name: "mask7_up_b"
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64    
    kernel_size: 4    
    stride: 2          
    pad: 1
    weight_filler {
      type: "bilinear"
 
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer { name: "mask7_up_res05_relu" type: "ReLU" bottom: "mask7_up_res05" top: "mask7_up_res05" }

## NETWORK for resolution 3/4 ###
## pool5 - > skip2
layer {
  name: "skip2_res075"
  type: "Convolution"
  bottom: "pool5_res075"
  top: "skip2_res075"
  param {
    name: "skip2_w"
    lr_mult: 1
    decay_mult: 1
  }
  param {
    name: "skip2_b"
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64 
    pad: 1 
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }  
  }
}
layer { name: "skip2_res075_relu" type: "ReLU" bottom: "skip2_res075" top: "skip2_res075" }

## pool4 -> skip3
layer {
  name: "skip3_res075"
  type: "Convolution"
  bottom: "pool4_res075"
  top: "skip3_res075"
  param {
    name: "skip3_w"
    lr_mult: 1
    decay_mult: 1
  }
  param {
    name: "skip3_b"
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64 
    pad: 1 
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }  
  }
}
layer { name: "skip3_res075_relu" type: "ReLU" bottom: "skip3_res075" top: "skip3_res075" }

## skip2 + skip3 -> concat3
layer { name: "concat3_res075" bottom: "skip3_res075" bottom: "skip2_res075" top: "concat3_res075" type: "Concat"
        concat_param { axis: 1 }}

## concat3 -> mask4
layer {
  name: "mask4_res075"
  type: "Convolution"
  bottom: "concat3_res075"
  top: "mask4_res075"
  param {
    name: "mask4_w"
    lr_mult: 1
    decay_mult: 1
  }
  param {
    name: "mask4_b"
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64 
    pad: 1 
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }  
  }
}
layer { name: "mask4_res075_relu" type: "ReLU" bottom: "mask4_res075" top: "mask4_res075" }

## pool3 -> skip4
layer {
  name: "skip4_res075"
  type: "Convolution"
  bottom: "pool3_res075"
  top: "skip4_res075"
  
  param {
    name: "skip4_w"
    lr_mult: 1
    decay_mult: 1
  }
  param {
    name: "skip4_b"
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64 
    pad: 1 
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }  
  }
}
layer { name: "skip4_res075_relu" type: "ReLU" bottom: "skip4_res075" top: "skip4_res075" }

## mask4 + skip4 -> mask5
layer { name: "concat4_res075" bottom: "skip4_res075" bottom: "mask4_res075" top: "concat4_res075"
        type: "Concat" concat_param { axis: 1 }}
layer {
  name: "mask5_res075"
  type: "Convolution"
  bottom: "concat4_res075"
  top: "mask5_res075"
  param {
    name: "mask5_w"
    lr_mult: 1
    decay_mult: 1
  }
  param {
    name: "mask5_b"
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64 
    pad: 1 
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }  
  }
}
layer { name: "mask5_res075_relu" type: "ReLU" bottom: "mask5_res075" top: "mask5_res075" }

# upsample: mask5 -> mask5_up
layer {
  name: "mask5_up_res075"
  type: "Deconvolution"
  bottom: "mask5_res075"
  top: "mask5_up_res075"
  
  param {
    name: "mask5_up_w"
    lr_mult: 1
    decay_mult: 1
  }
  param {
    name: "mask5_up_b"
    lr_mult: 2
    decay_mult: 0
  }

  convolution_param {
    num_output: 64    
    kernel_size: 4    
    stride: 2          
    pad: 1
    weight_filler {
      type: "bilinear"
 
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer { name: "mask5_up_res075_relu" type: "ReLU" bottom: "mask5_up_res075" top: "mask5_up_res075" }
## pool2 -> skip5
layer {
  name: "skip5_res075"
  type: "Convolution"
  bottom: "pool2_res075"
  top: "skip5_res075"  
  param {
    name: "skip5_w"
    lr_mult: 1
    decay_mult: 1
  }
  param {
    name: "skip5_b"
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64 
    pad: 1 
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }  
  }
}
layer { name: "skip5_res075_relu" type: "ReLU" bottom: "skip5_res075" top: "skip5_res075" }

## mask5_up + skip5 -> mask6
layer { name: "concat5_res075" bottom: "skip5_res075"  bottom: "mask5_up_res075" top: "concat5_res075"
  type: "Concat" concat_param {axis: 1}}
layer {
  name: "mask6_res075"
  type: "Convolution"
  bottom: "concat5_res075"
  top: "mask6_res075"
  param {
    name: "mask6_w"
    lr_mult: 1
    decay_mult: 1
  }
  param {
    name: "mask6_b"
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64 
    pad: 1 
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }  
  }
}
layer { name: "mask6_res075_relu" type: "ReLU" bottom: "mask6_res075" top: "mask6_res075" }

# upsample: mask6 -> mask6_up
layer {
  name: "mask6_up_res075"
  type: "Deconvolution"
  bottom: "mask6_res075"
  top: "mask6_up_res075"
  param {
    name: "mask6_up_w"
    lr_mult: 1
    decay_mult: 1
  }
  param {
    name: "mask_up_b"
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64    
    kernel_size: 4    
    stride: 2          
    pad: 1
    weight_filler {
      type: "bilinear"
 
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer { name: "mask6_up_res075_relu" type: "ReLU" bottom: "mask6_up_res075" top: "mask6_up_res075" }

## pool1 -> skip6
layer {
  name: "skip6_res075"
  type: "Convolution"
  bottom: "pool1_res075"
  top: "skip6_res075"
  param {
    name: "skip6_w"
    lr_mult: 1
    decay_mult: 1
  }
  param {
    name: "skip6_b"
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64 
    pad: 1 
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }  
  }
}
layer { name: "skip6_res075_relu" type: "ReLU" bottom: "skip6_res075" top: "skip6_res075" }

## mask6_up + skip6 -> mask7
layer { name: "concat6_res075" bottom: "skip6_res075" bottom: "mask6_up_res075" top: "concat6_res075"
        type: "Concat" concat_param {axis: 1}}
layer {
  name: "mask7_res075"
  type: "Convolution"
  bottom: "concat6_res075"
  top: "mask7_res075"
  param {
    name: "mask7_w"
    lr_mult: 1
    decay_mult: 1
  }
  param {
    name: "mask7_b"
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64 
    pad: 1 
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }  
  }
}
layer { name: "mask7_res075_relu" type: "ReLU" bottom: "mask7_res075" top: "mask7_res075" }

# upsample:mask7 -> mask7_up
layer {
  name: "mask7_up_res075"
  type: "Deconvolution"
  bottom: "mask7_res075"
  top: "mask7_up_res075"
  param {
    name: "mask7_up_w"
    lr_mult: 1
    decay_mult: 1
  }
  param {
    name: "mask7_up_b"
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64    
    kernel_size: 4    
    stride: 2          
    pad: 1
    weight_filler {
      type: "bilinear"
 
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer { name: "mask7_up_res075_relu" type: "ReLU" bottom: "mask7_up_res075" top: "mask7_up_res075" }

##########################
##     Output Unit      ##
##########################

# ---- decrease channnel ----

layer {
  name: "Output_mask"
  type: "Convolution"
  bottom: "mask7_up"
  top: "output-mask"
  param {
    name: "output_mask_w"
    lr_mult: 1
    decay_mult: 1
  }
  param {
    name: "output_mask_b"
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 2
    kernel_size: 3
    stride: 1 
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }    
  }
}

layer {
  name: "Output_mask_res05"
  type: "Convolution"
  bottom: "mask7_up_res05"
  top: "output-mask_res05"
  param {
    name: "output_mask_w"
    lr_mult: 1
    decay_mult: 1
  }
  param {
    name: "output_mask_b"
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 2
    kernel_size: 3
    stride: 1 
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }    
  }
}

layer {
  name: "Output_mask_res075"
  type: "Convolution"
  bottom: "mask7_up_res075"
  top: "output-mask_res075"
  param {
    name: "output_mask_w"
    lr_mult: 1
    decay_mult: 1
  }
  param {
    name: "output_mask_b"
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 2
    kernel_size: 3
    stride: 1 
    pad: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }    
  }
}

############### classifier for pool5-smap ###################
layer {
  bottom: "pool5"
  top: "pool5-smap"
  name: "pool5-mask"
  type: "Convolution"
  param {
    name: "pool5_w"
    lr_mult: 1
    decay_mult: 1
  }
  param {
    name: "pool5_b"
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 2
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}

layer {
  bottom: "pool5_res05"
  top: "pool5-smap_res05"
  name: "pool5-mask_res05"
  type: "Convolution"
  param {
    name: "pool5_w"
    lr_mult: 1
    decay_mult: 1
  }
  param {
    name: "pool5_b"
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 2
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}

layer {
  bottom: "pool5_res075"
  top: "pool5-smap_res075"
  name: "pool5-mask_res075"
  type: "Convolution"
  param {
    name: "pool5_w"
    lr_mult: 1
    decay_mult: 1
  }
  param {
    name: "pool5_b"
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 2
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}

############## add supervsion to pool5-smap's directly  ##########
## resolution 1 ##
layer {
  bottom: "pool5-smap"
  top: "pool5-smap_interp"
  name: "pool5-smap_interp"
  type: "Interp"
  interp_param { height: 256 width: 256 }
}

#layer { name: "accuracy_pool5" type: "SegAccuracy" bottom: "pool5-smap_interp"
#  bottom: "label" top: "acc1-pool5_res1" seg_accuracy_param {ignore_label: 255}}

## resolution 1/2 ##
layer {
  bottom: "pool5-smap_res05"
  top: "pool5-smap_res05_interp"
  name: "pool5-smap_res05_interp"
  type: "Interp"
  interp_param { height: 256 width: 256 }
}

#layer { name: "accuracy_pool5_res05" type: "SegAccuracy" bottom: "pool5-smap_res05_interp"
#  bottom: "label" top: "acc1-pool5_res05" seg_accuracy_param {ignore_label: 255}}

## resolution 3/4 ##
layer {
  bottom: "pool5-smap_res075"
  top: "pool5-smap_res075_interp"
  name: "pool5-smap_res075_interp"
  type: "Interp"
  interp_param { height: 256 width: 256 }
}

#layer { name: "accuracy_pool5_res075" type: "SegAccuracy" bottom: "pool5-smap_res075_interp"
#  bottom: "label" top: "acc1-pool5_res075" seg_accuracy_param {ignore_label: 255}}

############## supervsion to output-smap's   ##########
## resolution 1
layer{
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "output-mask"
  bottom: "label"
  loss_param { ignore_label: 255}
  include: { phase: TRAIN }
  propagate_down: 0
  propagate_down: 0
}
#layer { name: "accuracy" type: "SegAccuracy" bottom: "output-mask" bottom: "label"
#  top: "acc2-mask7_up" seg_accuracy_param {ignore_label: 255}}

## resolution 1/2
layer {
  bottom: "output-mask_res05"
  top: "output-mask_res05_interp"
  name: "output-mask_res05_interp"
  type: "Interp"
  interp_param { height: 256 width: 256 }
}
layer{
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "output-mask_res05_interp"
  bottom: "label"
  loss_param { ignore_label: 255}
  include: { phase: TRAIN }
  propagate_down: 0
  propagate_down: 0
}
#layer { name: "accuracy" type: "SegAccuracy" bottom: "output-mask_res05_interp" bottom: "label"
#  top: "acc2-mask7_up_res05" seg_accuracy_param {ignore_label: 255}}

## resolution 3/4
layer {
  bottom: "output-mask_res075"
  top: "output-mask_res075_interp"
  name: "output-mask_res075_interp"
  type: "Interp"
  interp_param { height: 256 width: 256 }
}
layer{
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "output-mask_res075_interp"
  bottom: "label"
  loss_param { ignore_label: 255 }
  include: { phase: TRAIN }
  propagate_down: 0
  propagate_down: 0
}
#layer { name: "accuracy" type: "SegAccuracy" bottom: "output-mask_res075_interp" bottom: "label"
#  top: "acc2-mask7_up_res075" seg_accuracy_param { ignore_label: 255}}

############### merging pool5 and mask7_up results #####################
## resolution 1
layer {
  bottom: "pool5-smap_interp"
  bottom: "output-mask"
  top: "mask_fusion"
  name: "mask_fusion"
  type: "Eltwise"
  eltwise_param {
    operation: MAX
  }
}
layer { name: "loss" type: "SoftmaxWithLoss" bottom: "mask_fusion" bottom: "label"
        include { phase: TRAIN} loss_param { ignore_label: 255 } propagate_down: 0 propagate_down: 0}
layer { name: "accuracy" type: "SegAccuracy" bottom: "mask_fusion" bottom: "label"
        top: "acc3_fusion" seg_accuracy_param { ignore_label: 255} propagate_down: 0 propagate_down: 0}

## resolution 1/2
layer {
  bottom: "pool5-smap_res05_interp"
  bottom: "output-mask_res05_interp"
  top: "mask_fusion_res05"
  name: "mask_fusion_res05"
  type: "Eltwise"
  eltwise_param { operation: MAX }
}
layer { name: "loss" type: "SoftmaxWithLoss" bottom: "mask_fusion_res05" bottom: "label"
        include { phase: TRAIN} loss_param { ignore_label: 255 } propagate_down: 0 propagate_down: 0}
layer { name: "accuracy" type: "SegAccuracy" bottom: "mask_fusion_res05" bottom: "label"
        top: "acc3_fusion_res05" seg_accuracy_param { ignore_label: 255}   propagate_down: 0 propagate_down: 0}

## resolution 3/4
layer {
  bottom: "pool5-smap_res075_interp"
  bottom: "output-mask_res075_interp"
  top: "mask_fusion_res075"
  name: "mask_fusion_res075"
  type: "Eltwise"
  eltwise_param {
    operation: MAX
  }
}

layer { name: "loss" type: "SoftmaxWithLoss" bottom: "mask_fusion_res075" bottom: "label"
        include { phase: TRAIN} loss_param { ignore_label: 255 } propagate_down: 0 propagate_down: 0}
layer { name: "accuracy" type: "SegAccuracy" bottom: "mask_fusion_res075" bottom: "label"
        top: "acc3_fusion_res075" seg_accuracy_param { ignore_label: 255} propagate_down: 0 propagate_down: 0}

############### merging multi-scale results #####################
layer {
  bottom: "mask_fusion"
  bottom: "mask_fusion_res05"
  bottom: "mask_fusion_res075"
  top: "mask_multi"
  name: "mask_multi"
  type: "Eltwise"
  eltwise_param {
    operation: MAX
  }
}
## fusion : max
layer {
  name: "accuracy"
  type: "SegAccuracy"
  bottom: "mask_multi"
  bottom: "label"
  top: "acc4_mask_multi"
  seg_accuracy_param {
    ignore_label: 255
  }
  propagate_down: 0
  propagate_down: 0
}

####################################
####        Attention           #### 
####################################

############### concatenation and pass through attention model #########
## interp  
layer { bottom: "mask7_up_res05" top: "mask7_up_res05_interp" name: "mask7_up_res05_interp" type: "Interp"
        interp_param { height: 256 width: 256 }}
layer { bottom: "mask7_up_res075" top: "mask7_up_res075_interp" name: "mask7_up_res075_interp" type: "Interp"
        interp_param { height: 256 width: 256 }}
## concat 
layer { bottom: "mask7_up" bottom: "mask7_up_res075_interp" bottom: "mask7_up_res05_interp" top: "mask7_up_concat"
        name: "mask7_up_concat" type: "Concat" concat_param { axis: 1}}

### attention model
layer {
  bottom: "mask7_up_concat" 
  top: "att_conv1"
  name: "att_conv1"
  type: "Convolution"
  param {
    lr_mult: 10
    decay_mult: 1
  }
  param {
    lr_mult: 20
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    kernel_size: 3
    pad: 1
  }
}
layer { bottom: "att_conv1" top: "att_conv1" name: "relu_att_conv1" type: "ReLU"}
layer { bottom: "att_conv1" top: "att_conv1" name: "drop_att_conv1_mask" type: "Dropout" dropout_param { dropout_ratio: 0.5}}

layer {
  bottom: "att_conv1"
  top: "att_fc"
  name: "att_fc_mask_512"
  type: "Convolution"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 3
    kernel_size: 1
  }
}
layer { bottom: "att_fc" top: "attention" name: "attention" type: "Softmax"}

##collect the output from attention model 
layer { bottom: "attention" top: "attention1" top: "attention2" top: "attention3"
        name: "slice_attention" type: "Slice" slice_param { axis: 1 slice_point: 1 slice_point: 2}}

## multiply attention weights
layer { bottom: "mask_fusion" bottom: "attention1" top: "mask_fusion_product" name: "mask_fusion_product" type: "SpatialProduct" }
layer { bottom: "mask_fusion_res05" bottom: "attention3" top: "mask_fusion_res05_product" name: "mask_fusion_res05_product" type: "SpatialProduct" }
layer { bottom: "mask_fusion_res075" bottom: "attention2" top: "mask_fusion_res075_product" name: "mask_fusion_res075_product" type: "SpatialProduct" }

## fusion : attention
layer {
  bottom: "mask_fusion_product"
  bottom: "mask_fusion_res075_product"
  bottom: "mask_fusion_res05_product"
  top: "mask_att_fusion"
  name: "mask_att_fusion"
  type: "Eltwise" eltwise_param { operation: SUM }
}

layer {
  name: "accuracy"
  type: "SegAccuracy"
  bottom: "mask_att_fusion"
  bottom: "label"
  top: "acc5_mask_multi"
  seg_accuracy_param { ignore_label: 255}
  propagate_down: 0
  propagate_down: 0
}


## bbox ##
layer {
  bottom: "conv5_3"
  top: "pool5_bbox"
  name: "pool5_boox"
  type: "Pooling"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
  propagate_down: 0
}

layer {
  bottom: "pool5_bbox"
  top: "fc6"
  name: "fc6"
  type: "InnerProduct"
  inner_product_param {
    num_output: 1024
  }
}
layer {
  bottom: "fc6"
  top: "fc6"
  name: "relu6"
  type: "ReLU"
}
layer {
  bottom: "fc6"
  top: "fc7"
  name: "fc7"
  type: "InnerProduct"
  inner_product_param {
    num_output: 1024
  }
}
layer {
  bottom: "fc7"
  top: "fc7"
  name: "relu7"
  type: "ReLU"
}
layer {
  bottom: "fc7"
  top: "fc8"
  name: "fc8-SOD100"
  type: "InnerProduct"
  inner_product_param {
    num_output: 100
  }
}

layer {
    bottom: "fc8"
    bottom: "binary_labels"
    top:"bbox_binary_loss"
    name: "bbox_binary_loss"
    type: "SigmoidCrossEntropyLoss"
}
